{"version":3,"sources":["store/actions/actionTypes.js","store/actions/auth.js","components/Login/Login.js","components/SignUp/SignUp.js","services/api.js","services/user.services.js","services/data.services.js","components/Dashboard/Dashboard.js","components/Dashboard/QuoteView.js","components/AppDrawer/AppDrawer.js","containers/MUILayout.js","components/Statistics/Statistics.js","routes.js","components/App/App.js","reportWebVitals.js","utility.js","store/reducers/auth.js","services/token.services.js","services/setupInterceptors.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","REFRESH_TOKEN","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","epochConvert","seconds","utcSeconds","parseInt","d","Date","setUTCSeconds","authStart","type","actionTypes","authSuccess","refresh","user_id","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogout","authCheckState","getItem","undefined","token_data","expirationDate","getTime","refreshToken","theme","createTheme","connect","state","isAuthenticated","onAuth","username","password","axios","post","then","res","data","access","setItem","catch","err","action","onParseJwt","props","navigate","useNavigate","useEffect","console","log","ThemeProvider","Grid","container","component","maxWidth","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","style","padding","Box","marginTop","display","flexDirection","alignItems","Typography","variant","Alert","severity","AlertTitle","onSubmit","event","preventDefault","FormData","currentTarget","get","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","Button","mb","Link","href","onSignup","email","password2","first_name","last_name","tokens","useState","errorMsg","setErrorMsg","response","Object","keys","key","axiosInstance","create","baseURL","headers","getTokenUser","getQuotes","api","getQuotesConfig","patchQuotesConfig","qcid","payload","patch","getQuotesTags","onTryAutoSignup","onLogOut","quotesOrder","setQuotesOrder","selectedTag","setSelectedTag","React","dateValue","setDateValue","setUser","setData","currentSearchText","setCurrentSearchText","quoteId","setQuoteId","allTags","setAllTags","currentSelectedTags","setCurrentSelectedTags","window","filteredData","setFilteredData","length","tmpFilteredData","forEach","qid","element","push","tmpQuotesOrder","quote_res","quote_order","target_item","filter","items","user","quote_tags","result","dataDate","date","dateCompare","allTagsCompare","startDate","endDate","setHours","user_tags","some","userTag","includes","quote","toLowerCase","tag","handleChange","target","checked","array","index","indexOf","splice","saveOrPatchQuotesConfig","qidList","onDragEnd","destination","list","startIndex","endIndex","Array","from","removed","reorder","source","List","width","bgcolor","justifyContent","lg","m","placeholder","onChange","value","handleSearch","Autocomplete","multiple","limitTags","options","values","renderInput","params","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","MobileDateRangePicker","startText","endText","newValue","startProps","endProps","Fragment","mx","DesktopDateRangePicker","Checkbox","defaultChecked","color","red","yellow","blue","green","purple","onClick","tmpData","sort","a","b","Divider","droppableId","provided","snapshot","RootRef","rootRef","innerRef","isDraggingOver","Paper","draggableId","isDragDisabled","ListItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","background","ListItemText","primary","secondary","ml","url","ListItemSecondaryAction","IconButton","useParams","save","setSave","openDialog","setOpenDialog","setQuoteNotes","userTags","setUserTags","stateTag","setStateTag","allTagsId","setAllTagsId","handleSave","put","saveSingleQuote","status","saveQuotesTags","handleCloseDialog","handleDelete","delete","deleteSingleQuote","handleDeleteTag","tmp","controlProps","inputProps","getSingleQuote","direction","Chip","onDelete","tmpUserTag","textAlign","notes","multiline","Radio","mr","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","button","ListItemIcon","AppBar","styled","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","DashboardContent","setOpen","toggleDrawer","Toolbar","pr","edge","marginRight","noWrap","flexGrow","px","overflow","Container","MUILayout","removeStopword","string","sw","require","finalString","removeStopwords","quoteData","setQuoteData","tagDict","setTagDict","allTagDict","setAllTagDict","wordDict","setWordDict","tagCountList","setTagCountList","setAllTagCountList","wordCountList","setWordCountList","calculateTagFrequency","tmpTagDict","tagKey","tagVal","tagCount","toUpperCase","tmpAllTagDict","allTagKey","allTagVal","allTagCount","tmpWordDict","newString","word","wordKey","wordVal","wordCount","handleClick","clickedData","clickedTag","argument","currentSelectedTag","concat","aIndex","argdata","calculateWordFrequency","words","ResponsiveContainer","XAxis","dataKey","YAxis","Bar","entry","Cell","cursor","fill","BaseRouter","path","Login","SignUp","defaults","xsrfCookieName","xsrfHeaderName","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","loading","authRefreshSuccess","reducer","setup","store","interceptors","request","use","config","TokenService","getLocalAccessToken","Promise","reject","originalConfig","_retry","getLocalRefreshToken","rs","getLocalUserId","updateLocalAccessToken","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","setupInterceptors"],"mappings":"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","file":"static/js/main.24ca5a0d.chunk.js","sourcesContent":["export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n\nexport const parseJwt = (token) => {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\n\nconst epochConvert = (seconds) => {\n  let utcSeconds = parseInt(seconds);\n  let d = new Date(0); // The 0 there is the key, which sets the date to the epoch\n  d.setUTCSeconds(utcSeconds);\n  return d;\n}\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = (token, refresh, user_id) => {\n  return {\n     type: actionTypes.AUTH_SUCCESS,\n     token: token,\n     refresh: refresh,\n     user_id: user_id,\n  }\n}\n\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refresh');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n    token: null,\n    refresh: null,\n  }\n}\n\n// set time out after expiration time\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, expirationTime*1000)\n  }\n}\n\nexport const authLogout = () => {\n  return dispatch => {\n    dispatch(logout());\n  }\n}\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('/auth/login/', {\n      username: username,\n      password: password\n    })\n      .then(res => {\n        const token = res.data.access;\n        const refresh = res.data.refresh;\n        let token_data = parseJwt(refresh);\n        let user_id = token_data['user_id']\n        const expirationDate = epochConvert(token_data['exp']);\n        //const expirationDate = new Date(new Date().getTime() + 3600*1000)\n        localStorage.setItem('token', token);\n        localStorage.setItem('refresh', refresh);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('user_id', user_id);\n        dispatch(authSuccess(token, refresh, user_id));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err))\n      })\n  }\n}\n\nexport const authSignup = (username, email, password, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('/auth/register/', {\n      username: username,\n      email: email,\n      password: password,\n      password2: password2,\n      first_name: '',\n      last_name: ''\n    })\n      .then(res => {\n        const token = res.data.tokens.access;\n        const refresh = res.data.tokens.refresh;\n        let token_data = parseJwt(refresh);\n        let user_id = token_data['user_id']\n        const expirationDate = epochConvert(token_data['exp']);\n        //const expirationDate = new Date(new Date().getTime() + 3600*1000)\n        localStorage.setItem('token', token);\n        localStorage.setItem('refresh', refresh);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('user_id', user_id);\n        dispatch(authSuccess(token, refresh, user_id));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err))\n      })\n  }\n}\n\nexport const authCheckState = () => {\n\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const refresh = localStorage.getItem('refresh');\n    const user_id = localStorage.getItem('user_id');\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, refresh, user_id));\n        let token_data = parseJwt(refresh);\n        const expirationDate = epochConvert(token_data['exp']);\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000 ));\n      }\n    }\n  }\n}\n\n\n\n\nexport const refreshToken = (token, refresh, user_id) => {\n  return dispatch => {\n    dispatch(authSuccess(token, refresh, user_id));\n  }\n}","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport * as action from '../../store/actions/auth';\nimport { connect } from 'react-redux';\n\n\nconst theme = createTheme();\n\nfunction SignIn(props) {\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    props.onAuth(data.get('username'), data.get('password'))\n  };\n\n  \n\n  useEffect(() => {\n    if (props.isAuthenticated) {\n      navigate('/');\n    } \n  }, [props.isAuthenticated])\n\n  useEffect(() => {\n    if (props.error) {\n      console.log('error', props.error)\n    } \n  }, [props.error])\n\n  const loginError = () => {\n    return (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        Invalid username or password\n      </Alert>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" maxWidth=\"xs\" sx={{height: '100vh'}}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={6}\n          md={6}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random/?nature)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={6} md={6} style={{padding: '2em'}}>\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          { props.error ? loginError(): <></> }\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/signup/\" variant=\"body2\">\n                  Don't have an account?\n                </Link>\n              </Grid>\n            </Grid>\n\n          </Box>\n        </Box>\n        </Grid>\n        \n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.error,  \n    isAuthenticated: state.token !== null,\n    user_id: state.user_id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(action.authLogin(username, password)),\n    onParseJwt: (token) => action.parseJwt(token),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport * as action from '../../store/actions/auth';\nimport { connect } from 'react-redux';\n\n\nconst theme = createTheme();\n\nfunction SignIn(props) {\n\n  const navigate = useNavigate();\n  const [errorMsg, setErrorMsg] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    props.onSignup(data.get('username'), data.get('email'), data.get('password'), data.get('password2'))\n\n  };\n\n  \n\n  useEffect(() => {\n    if (props.isAuthenticated) {\n      navigate('/');\n    } \n  }, [props.isAuthenticated])\n\n  useEffect(() => {\n    if (props.error) {\n      setErrorMsg(props.error.response.data)\n    } \n  }, [props.error])\n\n  const loginError = () => {\n    return (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        { \n          \n          Object.keys(errorMsg).map((key) => (\n            <div>\n            {\n              key + \":\" + errorMsg[key] + \"\\n\"\n            }\n            </div>\n          )) \n\n        }\n      </Alert>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" maxWidth=\"xs\" sx={{height: '100vh'}}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={6}\n          md={6}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random/?nature)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={6} md={6} style={{padding: '2em'}}>\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          { props.error ? loginError(): <></> }\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password2\"\n              label=\"Retype Password\"\n              type=\"password\"\n              id=\"password2\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/login/\" variant=\"body2\">\n                  Already have an account? Sign in here.\n                </Link>\n              </Grid>\n            </Grid>\n\n          </Box>\n        </Box>\n        </Grid>\n        \n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.error,  \n    isAuthenticated: state.token !== null,\n    user_id: state.user_id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: (username, email, password, password2) => dispatch(action.authSignup(username, email, password, password2)),\n    onParseJwt: (token) => action.parseJwt(token),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"/modules\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n\n\nexport default axiosInstance;","import api from './api';\n\nexport const getTokenUser = (token) => {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  \n    var token_data = JSON.parse(jsonPayload);\n    return token_data;\n};\n\nexport const getUser = () => {\n    return api.get('/auth/users/');\n  }\n  ","import api from './api';\n\nexport const getQuotes = () => {\n  return api.get('/quotes/');\n}\n\nexport const getQuotesConfig = () => {\n  return api.get('/quotesConfig/');\n}\n\nexport const saveQuotesConfig = (payload) => {\n  return api.post('/quotesConfig/', payload)\n}\n\nexport const patchQuotesConfig = (qcid, payload) => {\n  return api.patch(`/quotesConfig/${qcid}/`, payload);\n}\n\nexport const getQuotesTags = () => {\n  return api.get('/quotesTags/');\n}\n\nexport const saveQuotesTags = (payload) => {\n  return api.post('/quotesTags/', payload)\n}\n\nexport const patchQuotesTags = (qcid, payload) => {\n  return api.patch(`/quotesTags/${qcid}/`, payload);\n}\n\nexport const getSingleQuote = (qid) => {\n  return api.get(`/quotes/${qid}/`)\n}\n\nexport const deleteSingleQuote = (qid) => {\n  return api.delete(`/quotes/${qid}/`)\n}\n\nexport const saveSingleQuote = (qid, payload) => {\n  return api.put(`/quotes/${qid}/`, payload)\n}","import React, { useState, useEffect } from 'react';\n\nimport './Dashboard.css';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as action from '../../store/actions/auth';\nimport { getTokenUser } from '../../services/user.services';\nimport { getQuotes, getQuotesConfig, saveQuotesConfig, patchQuotesConfig, getQuotesTags } from '../../services/data.services';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport TextField from '@mui/material/TextField';\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport MobileDateRangePicker from '@mui/lab/MobileDateRangePicker';\nimport DesktopDateRangePicker from '@mui/lab/DesktopDateRangePicker';\n\nimport { Checkbox, TablePagination } from '@mui/material';\nimport { red, yellow, blue, green, purple } from '@mui/material/colors';\nimport { borderRight } from '@mui/system';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { IconButton } from '@mui/material';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport { ListItemSecondaryAction } from '@mui/material';\nimport RootRef from \"@material-ui/core/RootRef\";\nimport { Paper } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Autocomplete } from '@mui/material';\n\nfunction Dashboard(props) {\n\n  // quotesConfig\n  const [quotesOrder, setQuotesOrder] = useState([]);\n\n  const [selectedTag, setSelectedTag] = useState(['red', 'yellow', 'blue', 'green', 'purple']);\n  const [dateValue, setDateValue] = React.useState([null, null]);\n\n  const [user, setUser] = useState('')\n  const [data, setData] = useState([]);\n  const [currentSearchText, setCurrentSearchText] = useState('');\n  const [quoteId, setQuoteId] = useState(0);\n\n  const [allTags, setAllTags] = useState([])\n  const [currentSelectedTags, setCurrentSelectedTags] = useState([])\n  \n  const token = window.localStorage.getItem('token');\n  const [filteredData, setFilteredData] = useState([data]);\n  const navigate = useNavigate(); \n\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [])\n  \n  useEffect(() => {\n    if (quotesOrder.length !== 0 && filteredData.length !== 0) {\n      let tmpFilteredData = []\n      quotesOrder.forEach(qid => {\n        filteredData.forEach(element => {\n          if(element.id === qid) {\n            tmpFilteredData.push(element)\n          }\n        });\n      });\n  \n      setFilteredData(tmpFilteredData)\n    }\n  }, [quotesOrder])\n\n  useEffect(() => {\n    if (!props.isAuthenticated) {\n      navigate('/login/');\n    } else if (props.isAuthenticated) {\n      console.log('try to get quotes')\n      let token_data = getTokenUser(token)\n      setUser(token_data['username']);\n      getQuotes()\n        .then(res => {\n          let tmpQuotesOrder = []\n          getQuotesConfig()\n            .then(quote_res => {\n              if(quote_res.data.length === 1) {\n                setQuoteId(quote_res.data[0].id)\n                tmpQuotesOrder = quote_res.data[0].quote_order.split(',').map((qid) => {return parseInt(qid)})\n                setQuotesOrder(tmpQuotesOrder)\n              } else if (quote_res.data.length > 1) {\n                let target_item = quote_res.data.filter((items) => { return (items.user === parseInt(props.user_id))})\n                setQuoteId(target_item[0].id)\n                tmpQuotesOrder = target_item[0].quote_order.split(',').map((qid) => {return parseInt(qid)})\n                setQuotesOrder(tmpQuotesOrder)\n              }\n            })\n            .catch(err => {\n              console.log(err)\n            })\n          setData([...data, ...res.data]);\n          setFilteredData([...res.data])\n\n          getQuotesTags()\n          .then(res=> {\n            console.log('res', res.data.length)\n            if (res.data.length === 1) {\n              console.log('all tags', res.data)\n              setAllTags(res.data[0].quote_tags.split(','))\n            } else if (res.data.length > 1) {\n              let target_item = res.data.filter((items) => { return (items.user === props.user_id)})\n              console.log('admin all tags', props.user_id, target_item)\n              setAllTags(target_item[0].quote_tags.split(','))\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          })\n\n        })\n        .catch(err => {\n          console.log(err);\n        })\n      \n      \n\n    }\n  }, [props.isAuthenticated])\n\n  useEffect(() => {\n    let result = [];\n\n    let tmpFilteredData = []\n    quotesOrder.forEach(qid => {\n      data.forEach(element => {\n        if(element.id === qid) {\n          tmpFilteredData.push(element)\n        }\n      });\n    });\n\n    result = tmpFilteredData.filter((data) => {\n\n      let dataDate = Date.parse(data.date)\n      let dateCompare = true;\n      let allTagsCompare = true;\n      let startDate = dateValue[0];\n      let endDate = new Date(dateValue[1]);\n      endDate.setHours(23, 59, 59, 999);\n      if (startDate !== null && endDate !== null) {\n        dateCompare = dataDate >= Date.parse(startDate) && dataDate <= Date.parse(endDate);\n      } \n\n      if (currentSelectedTags.length > 0) {\n        allTagsCompare = data.user_tags.split(',').some(userTag => currentSelectedTags.includes(userTag));   \n      }\n      return (\n        data.quote.toLowerCase().includes(currentSearchText) && selectedTag.includes(data.tag) \n        && dateCompare \n        && allTagsCompare\n      );\n    });\n    setFilteredData(result);\n  }, [selectedTag, currentSearchText, dateValue, currentSelectedTags])\n\n\n  const handleQuoteClick = (qid) => {\n    navigate(`/${qid}`);\n  }\n\n  const handleSearch = (event) => {\n    let value = event.target.value.toLowerCase();\n    setCurrentSearchText(value);\n  }\n\n  const handleChange = (event, tag) => {\n    if (event.target.checked) {\n      setSelectedTag([...selectedTag, tag])\n    } else if (event.target.checked === false) {\n      var array = [...selectedTag]; // make a separate copy of the array\n      var index = array.indexOf(tag)\n      if (index !== -1) {\n        array.splice(index, 1);\n        setSelectedTag(array);\n      }\n    }\n  } \n\n  const allTagsChange = (event, values) => {\n    console.log('tag change', values)\n    setCurrentSelectedTags(values);\n  }\n\n  const saveOrPatchQuotesConfig = (qidList) => {\n\n    console.log('save quotes config', quotesOrder.length, quoteId)\n\n    if (quotesOrder.length === 0 || quoteId === 0) {\n      getQuotesConfig()\n      .then(res => {\n        if (res.data.length === 0) {\n          saveQuotesConfig({'quote_order' : qidList.toString()})\n        } else if (res.data.length === 1) {\n          patchQuotesConfig(res.data[0].id, {'quote_order' : qidList.toString()})\n          setQuoteId(res.data[0].id)\n        } else if (res.data.length > 1) {\n          console.log('admin quote config')\n          console.log(res.data.filter((items) => { return (items.user === props.user_id)}))\n\n          let target_item = res.data.filter((items) => { return (items.user === parseInt(props.user_id))})\n          setQuoteId(target_item[0].id)\n          patchQuotesConfig(target_item[0].id, {'quote_order' : qidList.toString()})\n        }\n      })\n    } else {\n      console.log('quotelist', quotesOrder)\n      patchQuotesConfig(quoteId, {'quote_order' : qidList.toString()})\n    }\n  }\n\n  const sortTag = () => {\n    let tmpData = [...filteredData]\n    tmpData.sort((a,b) => (a.tag > b.tag) ? 1 : ((b.tag > a.tag) ? -1 : 0))\n    setFilteredData(tmpData)\n    let qidList = tmpData.map((item) => {\n      return (item.id)\n    })\n\n    setQuotesOrder(qidList)\n    saveOrPatchQuotesConfig(qidList)\n  }\n\n  const sortDate = () => {\n    console.log('sort date')\n    let tmpData = [...filteredData]\n    tmpData.sort((a,b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0))\n    setFilteredData(tmpData)\n\n    let qidList = tmpData.map((item) => {\n      return (item.id)\n    })\n\n    setQuotesOrder(qidList)\n    saveOrPatchQuotesConfig(qidList)\n  }\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n  \n    return result;\n  };\n  \n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // styles we need to apply on draggables\n    ...draggableStyle,\n  \n    ...(isDragging && {\n      background: \"rgb(235,235,235)\"\n    })\n  });\n  \n  const getListStyle = isDraggingOver => ({\n    //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  });\n\n\n  const onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      filteredData,\n      result.source.index,\n      result.destination.index\n    );\n\n\n    setFilteredData(\n      items\n    );\n\n    let qidList = items.map((item) => {\n      return (item.id)\n    })\n      setQuotesOrder(qidList)\n      saveOrPatchQuotesConfig(qidList)\n \n  }\n\n  const renderDnDQuotes = (items) => {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <RootRef rootRef={provided.innerRef}>\n              <List style={getListStyle(snapshot.isDraggingOver)}>\n                {items.map((item, index) => (\n                  <Paper sx={{m: 1}} key={index}>\n                  <Draggable \n                    key={item.id} \n                    draggableId={ item.id !== undefined ? (item.id).toString() : item.id } \n                    index={index}\n                    isDragDisabled={filteredData.length!==data.length}\n                  >\n                    {(provided, snapshot) => (\n                      <ListItem\n                        ContainerComponent=\"li\"\n                        ContainerProps={{ ref: provided.innerRef }}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                        sx = {{ background: `linear-gradient(to bottom right, ${item.tag}, white, transparent, transparent, transparent, transparent, transparent, transparent, transparent, transparent, transparent, transparent, transparent, transparent)` }}\n                      >\n\n                        <ListItemText\n                          primary={item.quote}\n                          secondary={\n                            <React.Fragment>\n                              <Typography\n                                sx={{ display: 'inline' }}\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"text.primary\"\n                              >\n                                {item.date}\n                              </Typography>\n                              <Typography component=\"span\" sx={{ml: '1em'}}>\n                                {<a href={item.url}>Source</a>}\n                              </Typography>\n                            </React.Fragment>\n                          }\n                          sx = {{ m: 2 }}\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton  onClick={()=>handleQuoteClick(item.id)} >\n                            <EditIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    )}\n                  </Draggable>\n                  </Paper>\n\n                ))}\n                {provided.placeholder}\n              </List>\n\n            </RootRef>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n      \n  }\n\n\n  return(\n    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n      <Grid container sx={{ justifyContent: 'space-between', padding: '1em' }}>\n        <Grid container sx={{ justifyContent: 'space-around' }}>\n          <Grid item xs={12} sm={12} lg={4} sx={{m: '1em'}}> \n            <TextField placeholder='Search' onChange={(event) =>handleSearch(event)} />\n          </Grid>\n          {\n            allTags.length > 0 ?\n            <Grid item  xs={12} sm={12} lg={4} sx={{m: '1em'}}>\n              <Autocomplete\n                multiple\n                limitTags={2}\n                id=\"multiple-limit-tags\"\n                options={allTags}\n                onChange={allTagsChange}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"\" placeholder='Select Tags'/>\n                )}\n                \n              />\n            </Grid>\n            :\n            <></>\n          }\n        </Grid>\n        \n\n        <Grid container sx={{ justifyContent: 'space-around', padding: '1em' }}>\n          <Grid item >\n            <LocalizationProvider dateAdapter={AdapterDateFns} >\n              <Stack spacing={3}>\n                <div id='mobile-date-container'>\n                  \n                  <MobileDateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </React.Fragment>\n                    )}\n                  />\n                </div>\n                \n                <div id='desktop-date-container'>\n                  <DesktopDateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </React.Fragment>\n                    )}\n                  />\n                </div>\n              </Stack>\n            </LocalizationProvider>\n          </Grid>\n\n          <Grid item>\n            <Checkbox defaultChecked sx={{ color: red[800], '&.Mui-checked': {color: red[600]} }}  onChange={(event)=>handleChange(event, 'red')} />\n            <Checkbox defaultChecked sx={{color: yellow[800], '&.Mui-checked': {color: yellow[600]} }}  onChange={(event)=>handleChange(event, 'yellow')} />\n            <Checkbox defaultChecked sx={{color: blue[800], '&.Mui-checked': {color: blue[600]} }}  onChange={(event)=>handleChange(event, 'blue')} />\n            <Checkbox defaultChecked sx={{color: green[800], '&.Mui-checked': {color: green[600]} }}  onChange={(event)=>handleChange(event, 'green')} />\n            <Checkbox defaultChecked sx={{color: purple[800], '&.Mui-checked': {color: purple[600]} }}  onChange={(event)=>handleChange(event, 'purple')} />\n          </Grid>\n\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item>\n          <Button\n            onClick={sortTag}\n          >\n            Sort by tag color</Button>\n        </Grid>\n        <Grid item>\n          <Button\n            onClick={sortDate}\n          >\n            Sort by date</Button>\n        </Grid>\n      </Grid>\n      <Divider />\n      {\n        //filteredData.map(renderQuotes) \n        renderDnDQuotes(filteredData)\n      }\n    </List>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token,\n    user_id: state.user_id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(action.authCheckState()),\n    onLogOut: () => dispatch(action.authLogout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { getSingleQuote } from \"../../services/data.services\";\nimport { getTokenUser } from \"../../services/user.services\";\nimport * as action from '../../store/actions/auth';\nimport { connect } from \"react-redux\";\n\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { TextField } from '@mui/material';\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Radio from '@mui/material/Radio';\nimport { red, yellow, blue, green, purple } from '@mui/material/colors';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Alert } from \"@mui/material\";\n\nimport { deleteSingleQuote, saveSingleQuote, getQuotesTags, saveQuotesTags, patchQuotesTags } from \"../../services/data.services\";\n\nimport { Chip } from \"@mui/material\";\nimport { Stack } from \"@mui/material\";\n\nfunction QuoteView(props) {\n\n  const { qid } = useParams();\n  const token = window.localStorage.getItem('token');\n  const [data, setData] = useState({});\n\n  const [user, setUser] = useState('');\n  const [save, setSave] = useState(false)\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const navigate = useNavigate();\n\n  const [selectedTag, setSelectedTag] = React.useState('');\n  const [quoteNotes, setQuoteNotes] = React.useState('');\n  const [userTags, setUserTags] = useState(data.user_tags); // user defined tags in each quote\n  const [stateTag, setStateTag] = useState(''); // curent tag inserted in the text box\n  const [allTags, setAllTags] = useState('') // all tags in all quotes\n  const [allTagsId, setAllTagsId] = useState(0);\n\n\n  const generateUserTags = () => {\n    return (\n      <Stack direction=\"row\" spacing={1}>\n        {\n          data.user_tags !== undefined ?\n          data.user_tags.split(',').map((tag, index) => {\n            if (tag.length > 0) {\n              return (<Chip key={index} label={tag} variant=\"outlined\" onDelete={()=>handleDeleteTag(tag)} />)\n            }\n            \n          })\n          : <></>\n        }\n      </Stack>\n    )\n  }\n\n  const handleChange = (event) => {\n    setSelectedTag(event.target.value);\n    let tmpData = data\n    tmpData.tag = event.target.value;\n    setData(tmpData);\n  };\n\n  const handleNoteChange = (event) => {\n    setQuoteNotes(event.target.value);\n    let tmpData = data\n    tmpData.notes = event.target.value;\n    setData(tmpData);\n  };\n\n  const handleTagChange = (event) => {\n    setStateTag(event.target.value);\n  };\n\n  const addTagToState = () => {\n    let tmp = ''\n    if (userTags !== undefined) {\n      let tmpUserTag = userTags.split(',')\n      if (tmpUserTag.includes(stateTag) === false) {\n        tmpUserTag.push(stateTag)\n        tmp = tmpUserTag.toString()\n        setUserTags(tmp)\n      } else {\n        tmp = tmpUserTag.toString()\n        console.log('already have')\n      }\n    } else {\n      tmp = stateTag\n      setUserTags(stateTag)\n    }\n    let tmpData = data\n    tmpData.user_tags = tmp\n    setData(tmpData);\n    console.log('tmpData', tmpData)\n\n    tmp = ''\n    if (allTags !== undefined) {\n      let tmpUserTag = allTags.split(',')\n      if (tmpUserTag.includes(stateTag) === false) {\n        tmpUserTag.push(stateTag)\n        tmp = tmpUserTag.toString()\n        setAllTags(tmp)\n      }\n    } else {\n      tmp = stateTag\n      setAllTags(stateTag)\n    }\n\n  } \n\n  const handleSave = (event) => {\n    console.log(data);\n    saveSingleQuote(qid, data)\n      .then(res => {\n        if (res.status === 200) {\n          console.log('save!')\n          setSave(true);\n        }\n      })\n      .catch(err => {\n        console.log('error saving', err)\n      })\n\n      if (allTagsId !== 0) {\n        patchQuotesTags(allTagsId, {'quote_tags': allTags})\n      } else {\n        saveQuotesTags({'quote_tags': allTags})\n      }\n  }\n\n  const handleOpenDialog = (event) => {\n    setOpenDialog(true);\n  }\n\n  const handleCloseDialog = (event) => {\n    setOpenDialog(false);\n  }\n\n  const handleDelete = (event) => {\n    deleteSingleQuote(qid)\n      .then(res => {\n        navigate('/')\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const handleDeleteTag = (label) => {\n    console.log(label);\n    if (userTags !== undefined) {\n      let tmpUserTags = userTags.split(',')\n      let tmp = tmpUserTags.filter((a) => a!==label).toString()\n      setUserTags(tmp)\n      let tmpData = data\n      tmpData.user_tags = tmp\n      setData(tmpData);\n      console.log(tmpData)\n    }\n  }\n\n  const controlProps = (item) => ({\n    checked: selectedTag === item,\n    onChange: handleChange,\n    value: item,\n    name: 'color-radio-button-demo',\n    inputProps: { 'aria-label': item },\n  });\n\n  useEffect(() => {\n    console.log('try to sign up')\n    props.onTryAutoSignup();\n    \n  }, [])\n\n\n  useEffect(() => {\n    if (!props.isAuthenticated) {\n        navigate('/login/');\n    } else if (props.isAuthenticated) {\n        console.log('try to get quotes')\n        let token_data = getTokenUser(token)\n        setUser(token_data['username']);\n        getSingleQuote(qid)\n        .then(res => {\n          setData(res.data);\n          setSelectedTag(res.data.tag);\n          setUserTags(res.data.user_tags)\n          \n        })\n        .catch(err => {\n          console.log(err);\n        })\n\n        getQuotesTags()\n        .then(res=> {\n          console.log('res', res.data)\n          if(res.data.length === 1) {\n            console.log('all tags', res.data[0].quote_tags)\n            setAllTags(res.data[0].quote_tags)\n            setAllTagsId(res.data[0].id)\n          } else if(res.data.length > 1) {\n            console.log('admin quote tags', res.data)\n            \n          }\n        })\n    }\n  }, [props.isAuthenticated])\n\n  const saveSuccess = () => {\n    //setSave(false);\n    return (\n      <Alert severity=\"success\">Modification save!</Alert>\n    )\n  }\n  \n\n  return (\n    <Box\n        sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n        }}\n    >\n        <Typography variant=\"h6\">\n          Quote Details\n        </Typography>\n        { save ? saveSuccess() : <></> }\n        <Box component=\"form\" noValidate sx={{ mt: 3, width: '100%' }} xs={12} sm={12} lg={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} lg={12}>\n              \n              <Typography>{data.quote}</Typography>\n            </Grid> \n            <Grid item xs={12} sm={12} lg={12}>\n              { generateUserTags() }\n            </Grid>\n            <Grid item >\n              <TextField onChange={handleTagChange} />\n              <Button variant=\"contained\" sx={{ alignItems:'center', m:1 }} onClick={addTagToState}>Add User Tag</Button>\n            </Grid>\n            <Grid item >\n              <Typography style={{textAlign: 'left'}}>\n                {data.date}\n              </Typography>\n              <Typography >\n                {<a href={data.url}>{data.url}</a>}\n              </Typography> \n            </Grid>\n            <Grid item  xs={12} sm={12} lg={12}>\n              <Typography style={{textAlign: 'left', marginTop: '1em'}}>\n                Notes:\n              </Typography>\n              <TextField \n                  value={data.notes}\n                  multiline\n                  xs={12} sm={12} lg={12}\n                  style={{width: \"100%\", marginTop: '1em'}}\n                  onChange={handleNoteChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={12} lg={12}>\n              Color tag\n              <div>\n                <Radio {...controlProps('red')} sx={{ color: red[800], '&.Mui-checked': {color: red[600]} }}   />\n                <Radio {...controlProps('yellow')} sx={{color: yellow[800], '&.Mui-checked': {color: yellow[600]} }}   />\n                <Radio {...controlProps('blue')} sx={{color: blue[800], '&.Mui-checked': {color: blue[600]} }}  />\n                <Radio {...controlProps('green')} sx={{color: green[800], '&.Mui-checked': {color: green[600]} }}   />\n                <Radio {...controlProps('purple')} sx={{color: purple[800], '&.Mui-checked': {color: purple[600]} }}   />\n              </div>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={()=>{navigate('/')}}\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, mr: 3, }}\n          >\n            Back\n          </Button>\n          <Button\n            onClick={()=>handleSave()}\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, mr: 3, }}\n          >\n            Save\n          </Button>\n          <Button \n            variant=\"contained\" \n            color=\"error\" \n            sx={{ mt: 3, mb: 2 }}\n            onClick={()=>{handleOpenDialog()}}\n          >\n            Delete\n          </Button>\n        </Box>\n        <Dialog\n          open={openDialog}\n          onClose={handleCloseDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Are you sure you want to delete?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Deleted item will be gone from the database forever.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button \n              variant=\"contained\" \n              color=\"error\" \n              onClick={()=>{handleDelete()}}>\n              Delete\n            </Button>\n            <Button onClick={handleCloseDialog} autoFocus>\n              Back\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    \n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token,\n    user_id: state.user_id\n  }\n}\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(action.authCheckState()),\n    onLogOut: () => dispatch(action.authLogout())\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteView);","import * as React from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nimport { useNavigate } from 'react-router-dom';\nimport * as action from '../../store/actions/auth';\nimport { connect } from 'react-redux';\n\nfunction AppDrawer(props) {\n  const navigate = useNavigate();\n\n  const handleDashboard = () => {\n    navigate('/');\n  }\n\n  const handleStats = () => {\n    navigate('/stats')\n  }\n\n  return (\n    <div>\n        <ListItem button onClick={handleDashboard}>\n        <ListItemIcon>\n            <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n\n        <ListItem button onClick={handleStats}> \n        <ListItemIcon>\n            <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Statistics\" />\n        </ListItem>\n\n        <ListItem button onClick={props.logout}>\n        <ListItemIcon>\n            <LogoutIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n        </ListItem>\n    </div>\n  )\n}\n\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(action.authLogout())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AppDrawer);","import * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\nimport AppDrawer from '../components/AppDrawer/AppDrawer';\n\nimport { Outlet } from 'react-router-dom';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List>\n            <AppDrawer />\n          </List>\n          <Divider />\n\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={12} lg={12}>\n                <Outlet />\n              </Grid>\n\n            </Grid>\n            {\n              //<Copyright sx={{ pt: 4 }} />\n            }\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function MUILayout() {\n  return <DashboardContent />;\n}","import React, { useEffect, useState } from \"react\";\nimport ReactWordcloud from 'react-wordcloud';\nimport { Paper, Typography } from \"@mui/material\";\nimport { getQuotes } from \"../../services/data.services\";\nimport * as action from '../../store/actions/auth';\n\nimport {\n    ArgumentAxis,\n    ValueAxis,\n    Chart,\n    BarSeries,\n    Title\n  } from '@devexpress/dx-react-chart-material-ui';\n\nimport { \n  BarChart, \n  Bar, \n  Cell, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer \n} from 'recharts';\n\n\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst removeStopword = (string) => {\n  let sw = require('stopword')\n  let punctuationless = string.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\n  let finalString = punctuationless.replace(/\\s{2,}/g,\" \").toLowerCase();\n  return sw.removeStopwords(finalString.split(' '));\n}\n\n\nfunction Statistics(props) {\n  \n  const [quoteData, setQuoteData] = useState([]);\n  const [filteredData, setFilteredData] = useState([quoteData]);\n  const [tagDict, setTagDict] = useState({});\n  const [allTagDict, setAllTagDict] = useState({});\n  const [wordDict, setWordDict] = useState({});\n  const [tagCountList, setTagCountList] = useState([]);\n  const [allTagCountList, setAllTagCountList] = useState([]);\n  const [wordCountList, setWordCountList] = useState([]);\n\n  const [selectedTag, setSelectedTag] = useState(['red', 'yellow', 'blue', 'green', 'purple']);\n\n\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    console.log('try to sign up')\n    props.onTryAutoSignup();\n  }, [])\n\n  useEffect(()=> {\n    if (!props.isAuthenticated) {\n      navigate('/login/');\n    } else if (props.isAuthenticated) {\n      getQuotes()\n        .then(res => {\n          setQuoteData(res.data);\n          res.data.map(calculateTagFrequency)\n        })\n        .catch(err =>{\n          console.log(err);\n        })\n    }\n  }, [props.isAuthenticated])\n\n  useEffect(() => {\n    console.log(wordCountList)\n  }, [wordCountList])\n\n\n\n  const calculateTagFrequency = (item, index) => {\n    console.log('calculate for', item)\n    let tmpTagDict = tagDict;\n    if (tmpTagDict[item.tag] !== undefined) {\n      tmpTagDict[item.tag] += 1;\n    } else {\n      tmpTagDict[item.tag] = 1\n    }\n    setTagDict(tmpTagDict);\n    console.log(tagDict);\n    let tagKey = Object.keys(tmpTagDict);\n    let tagVal = Object.values(tmpTagDict);\n    let tagCount = tagKey.map(function(a, index) { return {'argument':a.toUpperCase(), 'value':tagVal[index]} })\n    setTagCountList(tagCount);\n    console.log(tagCount);\n\n    let tmpAllTagDict = allTagDict;\n    item.user_tags.split(',').map((tag) => {\n      if (tmpAllTagDict[tag] !== undefined) {\n        tmpAllTagDict[tag] += 1;\n      } else {\n        tmpAllTagDict[tag] = 1\n      }\n    })\n    setAllTagDict(tmpAllTagDict)\n    let allTagKey = Object.keys(tmpAllTagDict);\n    let allTagVal = Object.values(tmpAllTagDict);\n    let allTagCount = allTagKey.map(function(a, index) { return {'text':a, 'value':allTagVal[index]} })\n    setAllTagCountList(allTagCount);\n\n    console.log(allTagCount)\n\n    let tmpWordDict = wordDict;\n    let newString = removeStopword(item.quote)\n    for (index in newString) {\n      let word = newString[index]\n      if (tmpWordDict[word] !== undefined) {\n        tmpWordDict[word] += 1;\n      } else {\n        tmpWordDict[word] = 1\n      }\n    }\n    setWordDict(tmpWordDict);\n    let wordKey = Object.keys(tmpWordDict);\n    let wordVal = Object.values(tmpWordDict);\n    let wordCount = wordKey.map(function(a, index) { return {'text':a, 'value':wordVal[index]} })\n    setWordCountList(wordCount);\n  }\n\n  const calculateWordFrequency = (list) => {\n    console.log('calculate word freq', list)\n    let tmpWordDict = {};\n    list.map((item, index) => {\n      let newString = removeStopword(item.quote)\n      for (index in newString) {\n        let word = newString[index]\n        if (tmpWordDict[word] !== undefined) {\n          tmpWordDict[word] += 1;\n        } else {\n          tmpWordDict[word] = 1\n        }\n      }\n    })\n    \n    setWordDict(tmpWordDict);\n    let wordKey = Object.keys(tmpWordDict);\n    let wordVal = Object.values(tmpWordDict);\n    let wordCount = wordKey.map(function(a, index) { return {'text':a, 'value':wordVal[index]} })\n    setWordCountList(wordCount);\n  }\n\n\n  const handleClick = (clickedData, index) => {\n\n    let clickedTag = clickedData.argument.toLowerCase();\n    let currentSelectedTag = [...selectedTag]\n    console.log(clickedTag, selectedTag)\n    if (selectedTag.includes(clickedTag) === false) {\n      currentSelectedTag = currentSelectedTag.concat(clickedTag)\n      console.log('current selected tag', currentSelectedTag)\n      setSelectedTag([...selectedTag, clickedTag])\n    } else if (selectedTag.includes(clickedTag)) {\n     \n      var aIndex = currentSelectedTag.indexOf(clickedTag)\n      if (aIndex !== -1) {\n        currentSelectedTag.splice(aIndex, 1);\n        setSelectedTag(currentSelectedTag);\n      }\n    }\n    let result = [];\n    result = quoteData.filter((argdata) => { \n      return (currentSelectedTag.includes(argdata.tag));\n    });\n    setFilteredData(result);\n    calculateWordFrequency(result);\n  };\n\n  const renderChart = () => {\n    return (\n      <div style={{ width: '100%' }}>\n        <Typography>Number of entries per tag. </Typography>\n        <Typography>Click on the bars to filter word cloud   </Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart width={150} height={40} data={tagCountList}>\n            <XAxis dataKey=\"argument\" />\n            <YAxis />\n            <Bar dataKey=\"value\" onClick={handleClick}>\n              {tagCountList.map((entry, index) => (\n                <Cell cursor=\"pointer\" fill={selectedTag.includes(entry.argument.toLowerCase()) ? entry.argument.toLowerCase() : 'grey'} key={`cell-${index}`} />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n        \n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Paper sx={{ mb: '2em' }}>\n        <ReactWordcloud words={wordCountList} />\n      </Paper>\n      \n      <Paper>\n        {\n          renderChart()\n        }\n      </Paper>\n\n      {\n        /**\n        <Paper>\n        <Chart\n          data={tagCountList}\n          palette=\"Soft\"\n        >\n          <ArgumentAxis />\n          <ValueAxis />\n      \n          <BarSeries valueField=\"value\" argumentField=\"argument\" />\n          <Title\n            text=\"Number of records per colour tag\"\n            />\n        </Chart>\n      </Paper>\n      **/\n      }\n\n\n    </div>\n    \n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token,\n    user_id: state.user_id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(action.authCheckState()),\n    onLogOut: () => dispatch(action.authLogout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport QuoteView from './components/Dashboard/QuoteView';\nimport MUILayout from './containers/MUILayout';\nimport Statistics from './components/Statistics/Statistics';\n\n\n\nfunction BaseRouter() {\n\n\n  return (\n      <Routes>\n        \n        <Route path='/login/' element={<Login />} />\n        <Route path='/signup/' element={<SignUp />} />\n        <Route path=\"/\" element={<MUILayout />} >\n          <Route path=\"/\" element={<Dashboard />} /> \n          <Route path=\"/:qid\" element={<QuoteView />} /> \n          <Route path=\"/stats\" element={<Statistics />} /> \n        </Route>\n\n      </Routes>\n  )\n}\n\n\n\nexport default BaseRouter;","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport BaseRouter from \"../../routes\";\n\nimport * as action from '../../store/actions/auth';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nfunction App(props) {\n\n  useEffect(() => {\n    props.onTryAutoSignup();\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <BaseRouter />\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(action.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n      ...oldObject,\n      ...updatedProperties    \n    }\n  }","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../utility';\n\nconst initialState = {\n  token: null,\n  refresh: null,\n  error: null,\n  loading: false,\n  user_id: null,\n}\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n}\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    refresh: action.refresh,\n    error: null,\n    loading: false,\n    user_id: action.user_id,\n  });\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n}\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    refresh: null,\n    user_id: null,\n  });\n}\n\nconst authRefreshSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    refresh: action.refresh,\n    error: null,\n    loading: false,\n    user_id: action.user_id,\n  });\n}\n\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START: return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL: return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n    case actionTypes.REFRESH_TOKEN: return authRefreshSuccess(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","class TokenService {\n    getLocalRefreshToken() {\n      const refresh = window.localStorage.getItem(\"refresh\");\n      return refresh;\n    }\n  \n    getLocalAccessToken() {\n      const token = window.localStorage.getItem(\"token\");\n      return token;\n    }\n\n    getLocalUserId() {\n      const user_id = window.localStorage.getItem(\"user_id\");\n      return user_id;\n    }\n  \n    updateLocalAccessToken(token) {\n      window.localStorage.setItem(\"token\", token);\n    }\n\n  }\n  \n  export default new TokenService();","import axiosInstance from \"./api\";\nimport TokenService from \"./token.services\";\nimport { refreshToken } from \"../store/actions/auth\";\n\nconst setup = (store) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      console.log('intercept request')\n      const token = TokenService.getLocalAccessToken();\n      if (token) {\n        config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\n        //config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n      }\n      return config;\n    },\n    (error) => {\n      console.log('request error', error);\n      return Promise.reject(error);\n    }\n  );\n\n  const { dispatch } = store;\n  axiosInstance.interceptors.response.use(\n    (res) => {\n      return res;\n    },\n    async (err) => {\n      const originalConfig = err.config;\n      if (originalConfig.url !== \"/auth/login/\" && err.response) {\n        // Access Token was expired\n\n        if (err.response.status === 401 && !originalConfig._retry) {\n          originalConfig._retry = true;\n          try {\n            const rs = await axiosInstance.post(\"/auth/login/refresh/\", {\n              refresh: TokenService.getLocalRefreshToken(),\n            });\n\n            const token = rs.data.access;\n            const refresh = TokenService.getLocalRefreshToken();\n            const user_id = TokenService.getLocalUserId();\n\n            dispatch(refreshToken(token, refresh, user_id));\n            TokenService.updateLocalAccessToken(token);\n\n            return axiosInstance(originalConfig);\n          } catch (_error) {\n            return Promise.reject(_error);\n          }\n        }\n      }\n\n      return Promise.reject(err);\n    }\n  );\n};\n\nexport default setup;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/auth';\n\nimport setupInterceptors from './services/setupInterceptors';\n\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nsetupInterceptors(store);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}